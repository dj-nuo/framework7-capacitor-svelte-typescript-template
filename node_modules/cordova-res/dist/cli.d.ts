import type et from 'elementtree';
import type { NativeProjectConfigByPlatform, Options, PlatformOptions } from '.';
import type { ResizeOptions } from './image';
import type { NativeProjectConfig } from './native';
import type { AdaptiveIconResourceOptions, RunPlatformOptions, SimpleResourceOptions } from './platform';
import { Platform } from './platform';
import type { Source } from './resources';
import { ResourceKey, ResourceType } from './resources';
export declare const DEFAULT_RESOURCES_DIRECTORY = "resources";
export declare const DEFAULT_FIT = "cover";
export declare const DEFAULT_POSITION = "center";
export declare function getDirectory(): string;
export declare function resolveOptions(args: readonly string[], config?: et.ElementTree): Promise<Options>;
export declare function parseOptions(args: readonly string[]): Required<Options>;
export declare function parseResourcesDirectoryOption(args: readonly string[]): string;
export declare function parseResizeOptions(args: readonly string[]): ResizeOptions;
export declare function parsePlatformOption(args: readonly string[]): string | undefined;
export declare function generatePlatformOptions(platforms: readonly Platform[], resourcesDirectory: string, args: readonly string[]): PlatformOptions;
export declare function generatePlatformProjectOptions(platforms: readonly Platform[], args: readonly string[]): NativeProjectConfigByPlatform;
export declare function generateRunOptions(platform: Platform, resourcesDirectory: string, args: readonly string[]): RunPlatformOptions;
export declare function generateNativeProjectConfig(platform: Platform, args: readonly string[]): NativeProjectConfig;
export declare function parseCopyOption(args: readonly string[]): boolean;
export declare function parseSkipConfigOption(args: readonly string[]): boolean;
export declare function parseAdaptiveIconResourceOptions(platform: Platform, resourcesDirectory: string, args: readonly string[]): AdaptiveIconResourceOptions | undefined;
export declare function parseAdaptiveIconForegroundOptions(resourcesDirectory: string, args: readonly string[]): AdaptiveIconResourceOptions['foreground'];
export declare function parseAdaptiveIconBackgroundOptions(resourcesDirectory: string, args: readonly string[]): AdaptiveIconResourceOptions['background'];
export declare function parseSimpleResourceOptions(platform: Platform, type: ResourceType.ICON | ResourceType.SPLASH, resourcesDirectory: string, args: readonly string[]): SimpleResourceOptions;
export declare function parseAdaptiveIconSourceFromArgs(type: ResourceKey.FOREGROUND | ResourceKey.BACKGROUND, args: readonly string[]): Source | undefined;
export declare function parseSourceFromArgs(type: ResourceType.ICON | ResourceType.SPLASH, args: readonly string[]): string | undefined;
export declare function parseSource(sourceOption: string): Source;
export declare function getDefaultSources(platform: Platform, type: ResourceType, resourcesDirectory: string): string[];
export declare function getDefaultAdaptiveIconSources(type: ResourceKey.FOREGROUND | ResourceKey.BACKGROUND, resourcesDirectory: string): string[];
